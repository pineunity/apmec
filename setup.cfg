[metadata]
name = tacker
summary = OpenStack NFV Orchestration
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://docs.openstack.org/developer/tacker/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 3
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3.5

[files]
packages =
    tacker
data_files =
    etc/tacker =
        etc/tacker/api-paste.ini
        etc/tacker/policy.json
        etc/tacker/rootwrap.conf
    etc/rootwrap.d =
        etc/tacker/rootwrap.d/tacker.filters
    etc/init.d = etc/init.d/tacker-server

[global]
setup-hooks =
    pbr.hooks.setup_hook

[entry_points]
console_scripts =
    tacker-db-manage = tacker.db.migration.cli:main
    tacker-server = tacker.cmd.eventlet.tacker_server:main
    tacker-conductor = tacker.cmd.eventlet.conductor:main
    tacker-rootwrap = oslo.rootwrap.cmd:main
tacker.service_plugins =
    dummy = tacker.tests.unit.dummy_plugin:DummyServicePlugin
    vnfm = tacker.vnfm.plugin:VNFMPlugin
    nfvo = tacker.nfvo.nfvo_plugin:NfvoPlugin
    commonservices = tacker.plugins.common_services.common_services_plugin:CommonServicesPlugin
tacker.nfvo.vim.drivers =
    openstack = tacker.nfvo.drivers.vim.openstack_driver:OpenStack_Driver
tacker.openstack.common.cache.backends =
    memory = tacker.openstack.common.cache._backends.memory:MemoryBackend
tacker.tacker.vnfm.drivers =
    noop = tacker.vnfm.infra_drivers.noop:DeviceNoop
    openstack = tacker.vnfm.infra_drivers.openstack.openstack:OpenStack
tacker.tacker.mgmt.drivers =
    noop = tacker.vnfm.mgmt_drivers.noop:DeviceMgmtNoop
    openwrt = tacker.vnfm.mgmt_drivers.openwrt.openwrt:DeviceMgmtOpenWRT
tacker.tacker.monitor.drivers =
    ping = tacker.vnfm.monitor_drivers.ping.ping:VNFMonitorPing
    http_ping = tacker.vnfm.monitor_drivers.http_ping.http_ping:VNFMonitorHTTPPing
tacker.tacker.alarm_monitor.drivers =
    ceilometer = tacker.vnfm.monitor_drivers.ceilometer.ceilometer:VNFMonitorCeilometer
tacker.tacker.policy.actions =
    autoscaling = tacker.vnfm.policy_actions.autoscaling.autoscaling:VNFActionAutoscaling
    respawn = tacker.vnfm.policy_actions.respawn.respawn:VNFActionRespawn
    log = tacker.vnfm.policy_actions.log.log:VNFActionLog
    log_and_kill = tacker.vnfm.policy_actions.log.log:VNFActionLogAndKill
oslo.config.opts =
    tacker.common.config = tacker.common.config:config_opts
    tacker.wsgi = tacker.wsgi:config_opts
    tacker.service = tacker.service:config_opts
    tacker.nfvo.nfvo_plugin = tacker.nfvo.nfvo_plugin:config_opts
    tacker.nfvo.drivers.vim.openstack_driver = tacker.nfvo.drivers.vim.openstack_driver:config_opts
    tacker.keymgr = tacker.keymgr:config_opts
    tacker.vnfm.monitor = tacker.vnfm.monitor:config_opts
    tacker.vnfm.plugin = tacker.vnfm.plugin:config_opts
    tacker.vnfm.infra_drivers.openstack.openstack= tacker.vnfm.infra_drivers.openstack.openstack:config_opts
    tacker.vnfm.mgmt_drivers.openwrt.openwrt = tacker.vnfm.mgmt_drivers.openwrt.openwrt:config_opts
    tacker.vnfm.monitor_drivers.http_ping.http_ping = tacker.vnfm.monitor_drivers.http_ping.http_ping:config_opts
    tacker.vnfm.monitor_drivers.ping.ping = tacker.vnfm.monitor_drivers.ping.ping:config_opts
    tacker.vnfm.monitor_drivers.ceilometer.ceilometer = tacker.vnfm.monitor_drivers.ceilometer.ceilometer:config_opts
    tacker.alarm_receiver = tacker.alarm_receiver:config_opts
mistral.actions =
    tacker.vim_ping_action = tacker.nfvo.workflows.vim_monitor.vim_ping_action:PingVimAction


[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[build_releasenotes]
all_files = 1
build-dir = releasenotes/build
source-dir = releasenotes/source

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = tacker/locale/tacker.pot

[compile_catalog]
directory = tacker/locale
domain = tacker

[update_catalog]
domain = tacker
output_dir = tacker/locale
input_file = tacker/locale/tacker.pot

[wheel]
universal = 1

[pbr]
autodoc_index_modules = True
warnerrors = True
autodoc_exclude_modules =
     tacker.db.migration.alembic_migrations.*
     tacker.tests.*
     thirdparty.*
