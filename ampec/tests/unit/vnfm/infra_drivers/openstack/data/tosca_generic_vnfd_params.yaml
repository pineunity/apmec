tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: Generic VDU with parameterized image and flavor

metadata:
  template_name: OpenWRT

topology_template:

  inputs:
    flavor:
      type: string
      description: Flavor name for the server
      constraints:
        - valid_values: [ m1.tiny, m1.small, m1.medium, m1.large, m1.large ]
      default: m1.tiny

    image:
      type: string
      description: Image name for the server
      default: OpenWRT

  node_templates:

    VDU1:
      type: tosca.nodes.nfv.VDU.Tacker
      properties:
        image: { get_input: image }
        flavor: { get_input: flavor }
        monitoring_policy:
          name: ping
          actions:
            failure: respawn
          parameters:
            count: 3
            interval: 10

    CP1:
      type: tosca.nodes.nfv.CP.Tacker
      properties:
        management: true
        anti_spoofing_protection: false
      requirements:
        - virtualLink:
            node: VL1
        - virtualBinding:
            node: VDU1

    CP2:
      type: tosca.nodes.nfv.CP.Tacker
      properties:
        anti_spoofing_protection: false
      requirements:
        - virtualLink:
            node: VL2
        - virtualBinding:
            node: VDU1

    CP3:
      type: tosca.nodes.nfv.CP.Tacker
      properties:
        anti_spoofing_protection: false
      requirements:
        - virtualLink:
            node: VL3
        - virtualBinding:
            node: VDU1

    VL1:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: net_mgmt
        vendor: Tacker

    VL2:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: pkt_in
        vendor: Tacker

    VL3:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: pkt_out
        vendor: Tacker

