# variables in header

# variables in path
alias_path:
  description: |
    The alias of the extension.
  in: path
  required: true
  type: string
classifier_id_path:
  description: |
    The UUID of the classifier.
  in: path
  required: true
  type: string
event_id_path:
  description: |
    The ID of the event.
  in: path
  required: true
  type: string
nfp_id_path:
  description: |
    The UUID of the NFP.
  in: path
  required: true
  type: string
ns_id_path:
  description: |
    The UUID of the NS.
  in: path
  required: true
  type: string
nsd_id_path:
  description: |
    The UUID of the MEAD.
  in: path
  required: true
  type: string
sfc_id_path:
  description: |
    The UUID of the SFC.
  in: path
  required: true
  type: string
vim_id_path:
  description: |
    The UUID of the VIM.
  in: path
  required: true
  type: string
mea_id_path:
  description: |
    The UUID of the MEA.
  in: path
  required: true
  type: string
mead_id_path:
  description: |
    The UUID of the MEAD.
  in: path
  required: true
  type: string
NANY_id_path:
  description: |
    The UUID of the NFY.
  in: path
  required: true
  type: string
NANYD_id_path:
  description: |
    The UUID of the NFYD.
  in: path
  required: true
  type: string

# variables in query

# variables in body
alias:
  description: |
    The alias for the extension. For example,
    "Commonservices", "MEO" or "MEC".
  in: body
  required: true
  type: string
classifier:
  description: |
    A ``classifier`` object.
  in: body
  required: true
  type: object
classifier_chain_id:
  description: |
    The UUID of the SFC which the classifier is related to.
  in: body
  required: true
  type: string
classifier_id:
  description: |
    The UUID of the Classifier.
  in: body
  required: true
  type: string
classifier_instance_id:
  description: |
    The UUID information to uniquely identify the classifier instance.
    A classifier is instantiated as a Neutron Flow Classifier when
    using OpenStack VIM Driver.
  in: body
  required: true
  type: string
classifier_match:
  description: |
    A match policy object that will be used to distinguish which
    traffic should enter the related SFC.
  in: body
  required: true
  type: object
classifier_nfp_id:
  description: |
    The UUID of the NFP which the classifier belongs to.
  in: body
  required: true
  type: string
classifier_status:
  description: |
    Status of the classifier.
  in: body
  required: true
  type: string
classifiers:
  description: |
    A list of ``classifier`` objects.
  in: body
  required: true
  type: array
created_at:
  description: |
    The date and time when the resource was created. The format is
    ``YYYY-MM-DD hh:mm:ss``. For example, ``2016-09-23 09:57:35``.
  in: body
  required: true
  type: string
description:
  description: |
    Human-readable description for the resource.
  in: body
  required: true
  type: string
description_opt:
  description: |
    Human-readable description for the resource.
  in: body
  required: false
  type: string
event:
  description: |
    An ``event`` object.
  in: body
  required: true
  type: object
event_details:
  description: |
    The detailed information for the event, if any.
  in: body
  required: true
  type: string
event_id:
  description: |
    The ID of the event.
  in: body
  required: true
  type: integer
event_resource_id:
  description: |
    The UUID of the resource that is related to the event.
  in: body
  required: true
  type: string
event_resource_state:
  description: |
    The state of the resource that is related to the event.
  in: body
  required: true
  type: string
event_resource_type:
  description: |
    The type of the resource that is related to the event.
  in: body
  required: true
  type: string
event_timestamp:
  description: |
    The date and time when the event was created. The format is
    ``YYYY-MM-DD hh:mm:ss``. For example, ``2016-09-23 09:57:35``.
  in: body
  required: true
  type: string
events:
  description: |
    A list of ``event`` objects.
  in: body
  required: true
  type: array
extension:
  description: |
    An ``extension`` object.
  in: body
  required: true
  type: object
extension_updated_at:
  description: |
    The date and time when the resource was updated. The format is
    `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_:
    ``YYYY-MM-DDThh:mm:ss±hh:mm``. For example, ``2016-09-23 09:59:27-05:00``.
    The ``±hh:mm`` value, if included, is the time zone as an offset from UTC.
  in: body
  required: true
  type: string
extensions:
  description: |
    A list of ``extension`` objects.
  in: body
  required: true
  type: array
links:
  description: |
    A list of links related to the extension.
  in: body
  required: true
  type: array
name:
  description: |
    Human-readable name for the resource.
  in: body
  required: true
  type: string
name_opt:
  description: |
    Human-readable name for the resource.
  in: body
  required: false
  type: string
nfp:
  description: |
    A ``nfp`` object.
  in: body
  required: true
  type: object
nfp_id:
  description: |
    The UUID of the Network Forwarding Path (NFP).
  in: body
  required: true
  type: string
nfp_status:
  description: |
    Status of the NFP.
  in: body
  required: true
  type: string
nfps:
  description: |
    A list of ``nfp`` objects.
  in: body
  required: true
  type: array
ns:
  description: |
    A ``ns`` object.
  in: body
  required: true
  type: object
ns_attributes:
  description: |
    NS attributes object.
  in: body
  required: true
  type: object
ns_attributes_opt:
  description: |
    NS attributes object. This object can contain ``param_values``.
  in: body
  required: false
  type: object
ns_created_at:
  description: |
    The date and time when the NS was created.
    The format is ``YYYY-MM-DD hh:mm:ss.ssssss``.
    For example, ``2016-09-23 09:59:27.392759``.
  in: body
  required: true
  type: string
ns_error_reason:
  description: |
    Reason for NS error, if any.
  in: body
  required: true
  type: string
ns_id:
  description: |
    The UUID of the NS.
  in: body
  required: true
  type: string
ns_mgmt_url:
  description: |
    Management URL information for the NS.
  in: body
  required: true
  type: string
ns_status:
  description: |
    Status of the NS.
  in: body
  required: true
  type: string
ns_updated_at:
  description: |
    The date and time when the NS was updated.
    The format is ``YYYY-MM-DD hh:mm:ss.ssssss``.
    For example, ``2016-09-23 09:59:27.392759``.
  in: body
  required: true
  type: string
nsd:
  description: |
    A ``nsd`` object.
  in: body
  required: true
  type: object
nsd_attributes:
  description: |
    Attributes necessary for spinning up NS.
  in: body
  required: true
  type: object
nsd_id:
  description: |
    The UUID of the NSD.
  in: body
  required: true
  type: string
nsds:
  description: |
    A list of ``nsd`` objects.
  in: body
  required: true
  type: array
nss:
  description: |
    A list of ``ns`` objects.
  in: body
  required: true
  type: array
service_types:
  description: |
    A list of service type.
  in: body
  required: true
  type: array
sfc:
  description: |
    A ``sfc`` object.
  in: body
  required: true
  type: object
sfc_chain:
  description: |
    A ordered list of node objects to traverse. Each node includes
    a list of CPs and correspondent MEA name. Up to 2 CPs may be
    listed per node. If 2 CPs are listed, the first will be
    considered the ingress port for traffic and the second will be
    the egress. If there's only one CP, then it will be considered
    both the ingress and egress port for traffic.
  in: body
  required: true
  type: array
sfc_id:
  description: |
    The UUID of the Service Function Chain (SFC).
  in: body
  required: true
  type: string
sfc_instance_id:
  description: |
    The UUID information to uniquely identify the SFC instance.
    A SFC is instantiated as a Neutron Port Chain when using
    OpenStack VIM Driver.
  in: body
  required: true
  type: string
sfc_nfp_id:
  description: |
    The UUID of the NFP which the SFC belongs to.
  in: body
  required: true
  type: string
sfc_path_id:
  description: |
    The ID of the path. It will be used in future implementations of
    Network Service Header (NSH) to identify paths via the Service
    Path Identifier (SPI) attribute.
  in: body
  required: true
  type: string
sfc_status:
  description: |
    Status of the SFC.
  in: body
  required: true
  type: string
sfcs:
  description: |
    A list of ``sfc`` objects.
  in: body
  required: true
  type: array
symmetrical:
  description: |
    Indicate whether reverse traffic should also flow through the path.
    Enabling ``symmetrical`` is not currently supported by the OpenStack
    VIM driver.
  in: body
  required: true
  type: boolean
symmetrical_opt:
  description: |
    Indicate whether reverse traffic should also flow through the path.
    Enabling ``symmetrical`` is not currently supported by the OpenStack
    VIM driver.
  in: body
  required: false
  type: boolean
tenant_id:
  description: |
    The UUID of the tenant. A tenant is also known as a project.
  in: body
  required: true
  type: string
tenant_id_opt:
  description: |
    The UUID of the tenant. A tenant is also known as a project.
  in: body
  required: false
  type: string
updated_at:
  description: |
    The date and time when the resource was updated.
    The format is ``YYYY-MM-DD hh:mm:ss.ssssss``.
    For example, ``2016-09-23 09:59:27.392759``.
  in: body
  required: true
  type: string
version_href:
  description: |
    Link to the API.
  in: body
  required: true
  type: string
version_id:
  description: |
    Version of the API.
  in: body
  required: true
  type: string
version_links:
  description: |
    List of version links. Each link contains ``href`` and ``rel``.
  in: body
  required: true
  type: array
version_rel:
  description: |
    Relationship of link with the version.
  in: body
  required: true
  type: string
version_status:
  description: |
    Status of the API, which can be ``CURRENT``, ``STABLE`` or ``DEPRECATED``.
  in: body
  required: true
  type: string
versions:
  description: |
    A list of ``version`` objects.
  in: body
  required: true
  type: array
vim:
  description: |
    A ``vim`` object.
  in: body
  required: true
  type: object
vim_auth_cred:
  description: |
    An authentication credential object for the remote OpenStack site.
    Credential can contain ``user_id`` (and/or ``username``) and ``password``.
    It also contains ``user_domain_name`` when using identity v3.
  in: body
  required: true
  type: object
vim_auth_cred_output:
  description: |
    An authentication credential object for the remote OpenStack site.
    Credential contains ``user_id`` (and/or ``username``), ``password``,
    ``project_id``, ``project_name``, and ``auth_url``.
    It also contains ``user_domain_name`` and ``project_domain_name``
    when using identity v3.
  in: body
  required: true
  type: object
vim_auth_url:
  description: |
    The authentication URL for the Keystone service of the remote OpenStack site.
  in: body
  required: true
  type: string
vim_created_at:
  description: |
    The date and time when the VIM was registered.
    The format is ``YYYY-MM-DD hh:mm:ss.ssssss``.
    For example, ``2016-09-23 09:59:27.392759``.
  in: body
  required: true
  type: string
vim_id:
  description: |
    The UUID of the VIM.
  in: body
  required: true
  type: string
vim_id_opt:
  description: |
    The UUID of the VIM.
  in: body
  required: false
  type: string
vim_is_default:
  description: |
    Indicate whether the VIM is used as default.
  in: body
  required: true
  type: boolean
vim_is_default_opt:
  description: |
    Indicate whether the VIM is used as default.
  in: body
  required: false
  type: boolean
vim_placement_attr:
  description: |
    VIM placement information object that includes ``regions``, which is
    a list of Region IDs. ``regions`` are automatically derived from VIM.
  in: body
  required: true
  type: object
vim_project:
  description: |
    A VIM's project information object for the remote OpenStack site.
    Project information can contain ``id`` or ``name``.
    It also contains ``project_domain_name`` when using identity v3.
  in: body
  required: true
  type: object
vim_project_opt:
  description: |
    A VIM's project information object for the remote OpenStack site.
    Project information can contain ``id`` or ``name``.
    It also contains ``project_domain_name`` when using identity v3.
  in: body
  required: false
  type: object
vim_status:
  description: |
    Status of the VIM.
  in: body
  required: true
  type: string
vim_type:
  description: |
    The type of VIM. Currently there is only one built-in VIM driver,
    which is for "openstack" type.
  in: body
  required: true
  type: string
vim_updated_at:
  description: |
    The date and time when the VIM was updated.
    The format is ``YYYY-MM-DD hh:mm:ss.ssssss``.
    For example, ``2016-09-23 09:59:27.392759``.
  in: body
  required: true
  type: string
vims:
  description: |
    A list of ``vim`` objects.
  in: body
  required: true
  type: array
mea:
  description: |
    A ``mea`` object.
  in: body
  required: true
  type: object
mea_attributes:
  description: |
    MEA attributes object. This object can contain ``config``,
    ``param_values``, ``monitoring_policy``, and ``heat_template``.
  in: body
  required: true
  type: object
mea_attributes_opt:
  description: |
    MEA attributes object. This object can contain ``config`` and
    ``param_values``.
  in: body
  required: false
  type: object
mea_attributes_put:
  description: |
    MEA attributes object. This object can contain ``config`` object.
  in: body
  required: false
  type: object
mea_config:
  description: |
    MEA configuration object.
  in: body
  required: true
  type: string
mea_config_opt:
  description: |
    MEA configuration object.
  in: body
  required: false
  type: object
mea_created_at:
  description: |
    The date and time when the MEA was created.
    The format is ``YYYY-MM-DD hh:mm:ss.ssssss``.
    For example, ``2016-09-23 09:59:27.392759``.
  in: body
  required: true
  type: string
mea_error_reason:
  description: |
    Reason for MEA error, if any.
  in: body
  required: true
  type: string
mea_heat_template:
  description: |
    Heat template which is translated from the MEAD template.
  in: body
  required: true
  type: string
mea_id:
  description: |
    The UUID of the MEA.
  in: body
  required: true
  type: string
mea_ids:
  description: |
    A list of ``mea_id`` objects.
  in: body
  required: true
  type: array
mea_instance_id:
  description: |
    A UUID information to uniquely identify the instance of MEA.
    This instance is equivalent to a Heat stack when using
    "openstack" type VIM.
  in: body
  required: true
  type: string
mea_mapping:
  description: |
    A ``mea_mapping`` object which contains mappings from MEAD name
    to MEA instance ID.
  in: body
  required: true
  type: object
mea_mapping_opt:
  description: |
    A ``mea_mapping`` object which contains mappings from MEAD name
    to MEA instance ID. This is used to declare which exact MEA
    instance to be used for each MEAD in the Forwarding Path definition.
    If no mea mappings are provided, then Apmec attempts to search
    for MEA instance derived from each MEADs.
  in: body
  required: false
  type: object
mea_mgmt_url:
  description: |
    Management URL information for the MEA.
  in: body
  required: true
  type: string
mea_monitoring_policy:
  description: |
    Monitoring policy which is derived from the MEAD template.
  in: body
  required: true
  type: string
mea_param_values:
  description: |
    MEA parameter object. These parameters will be substituted for MEA
    if the MEAD template is appropriately parameterized.
    See `MEAD Template Parameterization
    <https://docs.openstack.org/apmec/latest/contributor/mead_template_parameterization.html>`_
    for more information.
  in: body
  required: true
  type: string
mea_param_values_opt:
  description: |
    MEA parameter object. These parameters will be substituted for MEA
    if the MEAD template is appropriately parameterized.
    See `MEAD Template Parameterization
    <https://docs.openstack.org/apmec/latest/contributor/mead_template_parameterization.html>`_
    for more information.
  in: body
  required: false
  type: object
mea_placement_attr:
  description: |
    MEA placement information object. This object includes ``region_name``
    and ``vim_name``.
  in: body
  required: true
  type: object
mea_placement_attr_opt:
  description: |
    MEA placement information object. This object includes ``region_name``.
  in: body
  required: false
  type: object
mea_resource_id:
  description: |
    The UUID of the MEA resource. This is equivalent to Heat stack resource ID.
  in: body
  required: true
  type: string
mea_resource_name:
  description: |
    The name of the MEA resource. This is equivalent to Heat stack resource name.
  in: body
  required: true
  type: string
mea_resource_type:
  description: |
    The type of the MEA resource. This is equivalent to Heat stack resource type.
  in: body
  required: true
  type: string
mea_resources:
  description: |
    A list of MEA ``resource`` objects.
  in: body
  required: true
  type: array
mea_scale:
  description: |
    A MEA ``scale`` object, which contains ``policy`` and ``type``.
  in: body
  required: true
  type: object
mea_scale_policy:
  description: |
    Scaling policy defined in MEAD template. For more information, see
    `MEAD scaling
    <https://docs.openstack.org/apmec/latest/contributor/mead_template_parameterization.html>`_.
  in: body
  required: true
  type: string
mea_scale_type:
  description: |
    Scaling type, which is either ``in`` or ``out``.
  in: body
  required: true
  type: string
mea_status:
  description: |
    Status of the MEA.
  in: body
  required: true
  type: string
mea_updated_at:
  description: |
    The date and time when the MEA was updated.
    The format is ``YYYY-MM-DD hh:mm:ss.ssssss``.
    For example, ``2016-09-23 09:59:27.392759``.
  in: body
  required: true
  type: string
mead:
  description: |
    A ``mead`` object.
  in: body
  required: true
  type: object
mead_attributes:
  description: |
    Attributes necessary for spinning up MEA.
  in: body
  required: true
  type: object
mead_id:
  description: |
    The UUID of the MEAD.
  in: body
  required: false
  type: string
mead_template:
  description: |
    Template to create MEA.
  in: body
  required: false
  type: object
mead_template_source:
  description: |
    Source of MEAD.
  in: body
  required: false
  type: string
meads:
  description: |
    A list of ``mead`` objects.
  in: body
  required: true
  type: array
NANY:
  description: |
    A ``NANY`` object.
  in: body
  required: true
  type: object
NANY_forwarding_paths:
  description: |
    The UUID of the Network Forwarding Path (NFP) on which
    the NFY relies.
  in: body
  required: true
  type: string
NANY_id:
  description: |
    The UUID of the NFY.
  in: body
  required: true
  type: string
NANY_status:
  description: |
    Status of the NFY.
  in: body
  required: true
  type: string
NANYD:
  description: |
    A ``NANYD`` object.
  in: body
  required: true
  type: object
NANYD_id:
  description: |
    The UUID of the NFYD.
  in: body
  required: true
  type: string
NANYD_template:
  description: |
    A template object which includes behavioral and deployment
    information of NFYs. For more information, see
    `NFY Descriptor Template Guide
    <https://docs.openstack.org/apmec/latest/contributor/NANYD_template_description.html>`_.
  in: body
  required: true
  type: object
NANYDs:
  description: |
    A list of ``NANYD`` objects.
  in: body
  required: true
  type: array
NANYs:
  description: |
    A list of ``NANY`` objects.
  in: body
  required: true
  type: array
meas:
  description: |
    A list of ``mea`` objects.
  in: body
  required: true
  type: array

